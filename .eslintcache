[{"D:\\room\\src\\index.js":"1","D:\\room\\src\\reportWebVitals.js":"2","D:\\room\\src\\App.js":"3","D:\\room\\src\\redux_store.js":"4","D:\\room\\src\\Components\\MainContainer.jsx":"5","D:\\room\\src\\Api\\api.js":"6","D:\\room\\src\\Components\\Main.jsx":"7","D:\\room\\src\\Components\\TracksList.jsx":"8","D:\\room\\src\\Components\\TracksReducer.js":"9","D:\\room\\src\\Components\\OpenArtist.jsx":"10"},{"size":641,"mtime":1607690718318,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":236,"mtime":1607690803189,"results":"14","hashOfConfig":"12"},{"size":458,"mtime":1607707695634,"results":"15","hashOfConfig":"12"},{"size":606,"mtime":1607707910762,"results":"16","hashOfConfig":"12"},{"size":905,"mtime":1607713373767,"results":"17","hashOfConfig":"12"},{"size":1058,"mtime":1607707910754,"results":"18","hashOfConfig":"12"},{"size":2419,"mtime":1607715415397,"results":"19","hashOfConfig":"12"},{"size":2019,"mtime":1607707581071,"results":"20","hashOfConfig":"12"},{"size":933,"mtime":1607715218536,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dtrrcv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"D:\\room\\src\\index.js",[],["49","50"],"D:\\room\\src\\reportWebVitals.js",[],"D:\\room\\src\\App.js",["51"],"import logo from './logo.svg';\nimport './App.css';\nimport MainContainer from \"./Components/MainContainer\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div >\n      <MainContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\room\\src\\redux_store.js",[],"D:\\room\\src\\Components\\MainContainer.jsx",["52"],"import React from \"react\"\r\nimport Main from \"./Main\";\r\nimport {connect} from \"react-redux\";\r\nimport {findTracksThunk, setTracksThunk, setArtistInfoThunk, setFindedTracks} from \"./TracksReducer\";\r\n\r\nlet stateGo = (state) => {\r\n    return {\r\n        arrayTracks: state.trackTree.tracks, //tracks\r\n        arrayArtistInfo: state.trackTree.artistInfo, // artist details\r\n        findedTracks:state.trackTree.findedTracks, // finded tracks (search)\r\n    }\r\n};\r\n\r\nconst MainContainer = connect(stateGo, {setTracksThunk,setArtistInfoThunk,findTracksThunk,setFindedTracks})(Main);\r\n\r\n\r\nexport default MainContainer","D:\\room\\src\\Api\\api.js",[],"D:\\room\\src\\Components\\Main.jsx",["53","54","55"],"import {useEffect, useState} from \"react\";\r\nimport OpenArtist from \"./OpenArtist\";\r\nimport React from \"react\"\r\nimport TracksList from \"./TracksList\";\r\nimport {setArtistInfo} from \"./TracksReducer\";\r\n\r\n\r\nconst Main = (props) => {\r\n    const [currentId, setCurrentId] = useState(0);\r\n\r\n    useEffect(() => {\r\n        props.setTracksThunk(); // InitializeThunk\r\n    }, [])\r\n    \r\n    useEffect(()=>{\r\n        props.setArtistInfoThunk(currentId);  //If clicked initialize Info about artist\r\n    },[currentId])\r\n\r\n    return (\r\n        currentId\r\n            ? <OpenArtist setCurrentId={setCurrentId}\r\n                          arrayArtistInfo={props.arrayArtistInfo}\r\n                          currentId={currentId}/>\r\n            : <TracksList setCurrentId={setCurrentId}\r\n                          arrayPhotos={props.arrayPhotos}\r\n                          findedTracks={props.findedTracks}\r\n                          findPhotosThunk={props.findPhotosThunk}\r\n                          setFindedTracks={props.setFindedTracks} />\r\n    )\r\n}\r\n\r\n\r\nexport default Main","D:\\room\\src\\Components\\TracksList.jsx",["56","57","58","59"],"import React, {useEffect, useState} from \"react\"\r\nimport \"./../App.css\"\r\n\r\nconst TracksList = (props) => {\r\n\r\n    const [findOn, setFindOn] = useState(0) // Search track check\r\n    let ref1 = React.createRef(); //ref to textarea\r\n\r\n\r\n    let findTracks = () => {\r\n        let name = ref1.current.value;\r\n        if (name) {\r\n            props.findTracksThunk(name)\r\n            setFindOn(1)\r\n\r\n        } else {\r\n            props.setFindedTracks([]);\r\n            setFindOn(0)\r\n        }\r\n\r\n\r\n    }\r\n    let handleClick = (e) => {\r\n        props.setCurrentId(e.target.id)\r\n    }   // click on artist and changing currentId in Main.jsx and opening other Component(OpenArtist.jsx)\r\n\r\n\r\n    let findedTracks = props.findedTracks.map((elem) => {\r\n\r\n        return (<div className={\"imageSmall\"}>\r\n            <img className={\"img\"} onClick={handleClick} id={elem.artist.name} src={elem.image[1][\"#text\"]}/>\r\n            <div id={\"name\"}>\r\n                Name : {elem.name}\r\n            </div>\r\n            <div id={\"author\"}>\r\n                Author : {elem.artist}\r\n            </div>\r\n            <div id={\"author\"}>\r\n                URL : <a href={elem.url}> Link </a>\r\n            </div>\r\n\r\n        </div>)\r\n    }); // finded\r\n    let arrayPhotos = props.arrayTracks.map((elem) => {\r\n        return (<div className={\"imageSmall\"}>\r\n\r\n            <img className={\"img\"} onClick={handleClick} id={elem.artist.name} src={elem.image[1][\"#text\"]}/>\r\n            <div id={\"name\"}>\r\n                Name : {elem.name}\r\n            </div>\r\n            <div id={\"author\"}>\r\n                Author : {elem.artist.name}\r\n            </div>\r\n            <div id={\"author\"}>\r\n                URL : <a target=\"_blank\" href={elem.artist.url}> Link </a>\r\n            </div>\r\n\r\n        </div>)\r\n    }); // initialized\r\n\r\n\r\n    return (<div className={\"main\"}>\r\n\r\n        <div className={\"top\"}>\r\n            Top tracks\r\n        </div>\r\n        <div className={\"divTextArea\"}>\r\n\r\n            <textarea onChange={findTracks} ref={ref1} className={\"textArea\"} placeholder={\"Enter title\"}/>\r\n\r\n        </div>\r\n        <div className={\"allTracks\"}>\r\n            {props.findedTracks.length >= 1 || findOn ? findedTracks : arrayPhotos}\r\n        </div>\r\n        <div id={\"marianDiv\"}>Created for Test Task by <span className={\"marian\"}> &copy;<i>marianelement@gmail.com</i></span>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default TracksList","D:\\room\\src\\Components\\TracksReducer.js",["60"],"import React from \"react\"\r\nimport {api} from \"../Api/api\";\r\n\r\nlet initialState = {\r\n    tracks: [],\r\n    artistInfo:{\r\n\r\n    },\r\n    findedTracks:[],\r\n};\r\n\r\n\r\nconst TracksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"setTracks\": {\r\n            let statecopy = {...state};\r\n            statecopy.tracks = [...state.tracks]\r\n            statecopy.tracks = action.arrayPhotos\r\n            return statecopy;\r\n        }\r\n        case \"setArtistInfo\": {\r\n\r\n            let statecopy = {...state};\r\n            statecopy.artistInfo = {...state.artistInfo}\r\n            statecopy.artistInfo = action.arrayInfo;\r\n\r\n            return statecopy;\r\n        }\r\n        case \"setFindedTracks\": {\r\n\r\n            let statecopy = {...state};\r\n            statecopy.findedTracks = [...state.findedTracks]\r\n            statecopy.findedTracks = action.tracks;\r\n\r\n            return statecopy;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const setTracks = (arrayPhotos) => {\r\n    return {\r\n        type: \"setTracks\",\r\n        arrayPhotos: arrayPhotos,\r\n    }\r\n};\r\nexport const setArtistInfo = (arrayInfo) => {\r\n    return {\r\n        type: \"setArtistInfo\",\r\n        arrayInfo: arrayInfo,\r\n    }\r\n};\r\nexport const setFindedTracks = (tracks) => {\r\n    return {\r\n        type: \"setFindedTracks\",\r\n        tracks: tracks,\r\n    }\r\n};\r\n\r\nexport const setTracksThunk = () => (dispatch) => {\r\n    return api.getPhotos().then((response) => {\r\n\r\n        dispatch(setTracks(response))  //get from api and set to REDUX\r\n    })}\r\n    export const setArtistInfoThunk = (name) => (dispatch) => {\r\n\r\n    return api.getArtistInfo(name).then((response) => {\r\n\r\n        dispatch(setArtistInfo(response))  //get from api and set to REDUX\r\n    })};\r\n    export const findTracksThunk = (name) => (dispatch) => {\r\n      return  api.findPhotos(name).then((response)=>{\r\n\r\n            dispatch(setFindedTracks(response))\r\n\r\n        })\r\n    };\r\n\r\n\r\nexport default TracksReducer;","D:\\room\\src\\Components\\OpenArtist.jsx",["61","62"],"import React from \"react\"\r\nimport \"./../App.css\"\r\nimport backButton from \"../Images/93634.png\"\r\n\r\nconst OpenArtist = (props) => {\r\n    let arrayTags=[];\r\n    if (props.arrayArtistInfo.artist.tags.tag) props.arrayArtistInfo.artist.tags.tag.forEach((e)=>{\r\n        arrayTags.push(e.name)}) // create ArrayTags for artist\r\n\r\n\r\n\r\n    return (<div className={\"page\"}>\r\n\r\n        <div className={\"pageInfo\"}>\r\n<div className={\"imgInfo\"}>\r\n        <img  src={props.arrayArtistInfo.artist.image[2][\"#text\"]} />\r\n</div>\r\n            <div><b>Name</b>:{props.arrayArtistInfo.artist.name}</div>\r\n            <div><b>Tags</b>:{arrayTags.join(\",\")}</div>\r\n            <div className={\"bio\"} dangerouslySetInnerHTML={{ __html:\"<b>Bio</b>:\"+props.arrayArtistInfo.artist.bio.content }} />\r\n            <img src={backButton} id={\"backButton\"} onClick={() => props.setCurrentId(0)}/>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nexport default OpenArtist",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"72","line":5,"column":9,"nodeType":"69","messageId":"70","endLine":5,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":14,"column":8,"nodeType":"75","endLine":14,"endColumn":10,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"74","line":18,"column":7,"nodeType":"75","endLine":18,"endColumn":18,"suggestions":"77"},{"ruleId":"67","severity":1,"message":"78","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":31,"column":13,"nodeType":"81","endLine":31,"endColumn":110},{"ruleId":"79","severity":1,"message":"80","line":47,"column":13,"nodeType":"81","endLine":47,"endColumn":110},{"ruleId":"82","severity":1,"message":"83","line":55,"column":26,"nodeType":"84","endLine":55,"endColumn":41},{"ruleId":"67","severity":1,"message":"71","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":16,"column":9,"nodeType":"81","endLine":16,"endColumn":70},{"ruleId":"79","severity":1,"message":"80","line":21,"column":13,"nodeType":"81","endLine":21,"endColumn":92},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'setArtistInfo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["87"],["88"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [props]",{"range":"93","text":"94"},"Update the dependencies array to be: [currentId, props]",{"range":"95","text":"96"},[368,370],"[props]",[448,459],"[currentId, props]"]