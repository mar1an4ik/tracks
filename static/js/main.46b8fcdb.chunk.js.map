{"version":3,"sources":["logo.svg","Images/93634.png","Components/OpenArtist.jsx","Components/TracksList.jsx","Api/api.js","Components/TracksReducer.js","Components/Main.jsx","Components/MainContainer.jsx","App.js","reportWebVitals.js","redux_store.js","index.js"],"names":["OpenArtist","props","arrayTags","arrayArtistInfo","artist","tags","tag","forEach","e","push","name","className","src","image","join","dangerouslySetInnerHTML","__html","bio","content","backButton","id","onClick","setCurrentId","TracksList","useState","findOn","setFindOn","ref1","React","createRef","handleClick","target","findedTracks","map","elem","href","url","arrayPhotos","arrayTracks","onChange","current","value","findTracksThunk","setFindedTracks","ref","placeholder","length","API_KEY","instance","axios","baseURL","api","get","then","response","console","log","data","tracks","track","results","trackmatches","initialState","artistInfo","type","TracksReducer","state","action","statecopy","arrayInfo","Main","currentId","useEffect","setTracksThunk","setArtistInfoThunk","MainContainer","connect","trackTree","dispatch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46b8fcdb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/93634.b8dd3c5c.png\";","import React from \"react\"\r\nimport \"./../App.css\"\r\nimport backButton from \"../Images/93634.png\"\r\n\r\nconst OpenArtist = (props) => {\r\n    let arrayTags=[];\r\n    if (props.arrayArtistInfo.artist.tags.tag) props.arrayArtistInfo.artist.tags.tag.forEach((e)=>{\r\n        arrayTags.push(e.name)}) // create ArrayTags for artist\r\n\r\n\r\n\r\n    return (<div className={\"page\"}>\r\n\r\n        <div className={\"pageInfo\"}>\r\n<div className={\"imgInfo\"}>\r\n        <img  src={props.arrayArtistInfo.artist.image[2][\"#text\"]} />\r\n</div>\r\n            <div><b>Name</b>:{props.arrayArtistInfo.artist.name}</div>\r\n            <div><b>Tags</b>:{arrayTags.join(\",\")}</div>\r\n            <div className={\"bio\"} dangerouslySetInnerHTML={{ __html:\"<b>Bio</b>:\"+props.arrayArtistInfo.artist.bio.content }} />\r\n            <img src={backButton} id={\"backButton\"} onClick={() => props.setCurrentId(0)}/>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nexport default OpenArtist","import React, {useEffect, useState} from \"react\"\r\nimport \"./../App.css\"\r\n\r\nconst TracksList = (props) => {\r\n\r\n    const [findOn, setFindOn] = useState(0) // Search track check\r\n    let ref1 = React.createRef(); //ref to textarea\r\n\r\n\r\n    let findTracks = () => {\r\n        let name = ref1.current.value;\r\n        if (name) {\r\n            props.findTracksThunk(name)\r\n            setFindOn(1)\r\n\r\n        } else {\r\n            props.setFindedTracks([]);\r\n            setFindOn(0)\r\n        }\r\n\r\n\r\n    }\r\n    let handleClick = (e) => {\r\n        props.setCurrentId(e.target.id)\r\n    }   // click on artist and changing currentId in Main.jsx and opening other Component(OpenArtist.jsx)\r\n\r\n\r\n    let findedTracks = props.findedTracks.map((elem) => {\r\n\r\n        return (<div className={\"imageSmall\"}>\r\n            <img className={\"img\"} onClick={handleClick} id={elem.artist.name} src={elem.image[1][\"#text\"]}/>\r\n            <div id={\"name\"}>\r\n                Name : {elem.name}\r\n            </div>\r\n            <div id={\"author\"}>\r\n                Author : {elem.artist}\r\n            </div>\r\n            <div id={\"author\"}>\r\n                URL : <a href={elem.url}> Link </a>\r\n            </div>\r\n\r\n        </div>)\r\n    }); // finded\r\n    let arrayPhotos = props.arrayTracks.map((elem) => {\r\n        return (<div className={\"imageSmall\"}>\r\n\r\n            <img className={\"img\"} onClick={handleClick} id={elem.artist.name} src={elem.image[1][\"#text\"]}/>\r\n            <div id={\"name\"}>\r\n                Name : {elem.name}\r\n            </div>\r\n            <div id={\"author\"}>\r\n                Author : {elem.artist.name}\r\n            </div>\r\n            <div id={\"author\"}>\r\n                URL : <a target=\"_blank\" href={elem.artist.url}> Link </a>\r\n            </div>\r\n\r\n        </div>)\r\n    }); // initialized\r\n\r\n\r\n    return (<div className={\"main\"}>\r\n\r\n        <div className={\"top\"}>\r\n            Top tracks\r\n        </div>\r\n        <div className={\"divTextArea\"}>\r\n\r\n            <textarea onChange={findTracks} ref={ref1} className={\"textArea\"} placeholder={\"Enter title\"}/>\r\n\r\n        </div>\r\n        <div className={\"allTracks\"}>\r\n            {props.findedTracks.length >= 1 || findOn ? findedTracks : arrayPhotos}\r\n        </div>\r\n        <div id={\"marianDiv\"}>Created for Test Task by <span className={\"marian\"}> &copy;<i>marianelement@gmail.com</i></span>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default TracksList","import * as axios from \"axios\";\r\n\r\nconst API_KEY = \"&api_key=aa56245cf1ace076047f483492d92c57\";\r\n\r\nconst instance = axios.create({\r\n\r\n    baseURL: \"https://ws.audioscrobbler.com/2.0\",\r\n\r\n});\r\n\r\nexport const api = {\r\n\r\n    getPhotos() {\r\n        return instance.get(`?method=chart.gettoptracks&format=json` + API_KEY).then((response) => {\r\nconsole.log(response.data.tracks.track)\r\n            return response.data.tracks.track\r\n        });\r\n\r\n    },\r\n    getArtistInfo(name) {\r\n\r\n        return instance.get(`?method=artist.getinfo&artist=${name}&format=json` + API_KEY).then((response) => {\r\nconsole.log(response.data)\r\n            return response.data\r\n        });\r\n\r\n    },\r\n    findPhotos(name) {\r\n\r\n        return instance.get(`?method=track.search&track=${name}&format=json` + API_KEY).then((response) => {\r\n\r\n\r\n            return response.data.results.trackmatches.track\r\n        });\r\n\r\n    },\r\n\r\n};","import React from \"react\"\r\nimport {api} from \"../Api/api\";\r\n\r\nlet initialState = {\r\n    tracks: [],\r\n    artistInfo:{\r\n\r\n    },\r\n    findedTracks:[],\r\n};\r\n\r\n\r\nconst TracksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"setTracks\": {\r\n            let statecopy = {...state};\r\n            statecopy.tracks = [...state.tracks]\r\n            statecopy.tracks = action.arrayPhotos\r\n            return statecopy;\r\n        }\r\n        case \"setArtistInfo\": {\r\n\r\n            let statecopy = {...state};\r\n            statecopy.artistInfo = {...state.artistInfo}\r\n            statecopy.artistInfo = action.arrayInfo;\r\n\r\n            return statecopy;\r\n        }\r\n        case \"setFindedTracks\": {\r\n\r\n            let statecopy = {...state};\r\n            statecopy.findedTracks = [...state.findedTracks]\r\n            statecopy.findedTracks = action.tracks;\r\n\r\n            return statecopy;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const setTracks = (arrayPhotos) => {\r\n    return {\r\n        type: \"setTracks\",\r\n        arrayPhotos: arrayPhotos,\r\n    }\r\n};\r\nexport const setArtistInfo = (arrayInfo) => {\r\n    return {\r\n        type: \"setArtistInfo\",\r\n        arrayInfo: arrayInfo,\r\n    }\r\n};\r\nexport const setFindedTracks = (tracks) => {\r\n    return {\r\n        type: \"setFindedTracks\",\r\n        tracks: tracks,\r\n    }\r\n};\r\n\r\nexport const setTracksThunk = () => (dispatch) => {\r\n    return api.getPhotos().then((response) => {\r\n\r\n        dispatch(setTracks(response))  //get from api and set to REDUX\r\n    })}\r\n    export const setArtistInfoThunk = (name) => (dispatch) => {\r\n\r\n    return api.getArtistInfo(name).then((response) => {\r\n\r\n        dispatch(setArtistInfo(response))  //get from api and set to REDUX\r\n    })};\r\n    export const findTracksThunk = (name) => (dispatch) => {\r\n      return  api.findPhotos(name).then((response)=>{\r\n\r\n            dispatch(setFindedTracks(response))\r\n\r\n        })\r\n    };\r\n\r\n\r\nexport default TracksReducer;","import {useEffect, useState} from \"react\";\r\nimport OpenArtist from \"./OpenArtist\";\r\nimport React from \"react\"\r\nimport TracksList from \"./TracksList\";\r\nimport {setArtistInfo} from \"./TracksReducer\";\r\n\r\n\r\nconst Main = (props) => {\r\n    const [currentId, setCurrentId] = useState(0);\r\n\r\n    useEffect(() => {\r\n        props.setTracksThunk(); // InitializeThunk\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.setArtistInfoThunk(currentId);  //If clicked initialize Info about artist\r\n    }, [currentId])\r\n\r\n    return (\r\n        currentId\r\n            ? <OpenArtist setCurrentId={setCurrentId}\r\n                          arrayArtistInfo={props.arrayArtistInfo}\r\n                          currentId={currentId}/>\r\n            : <TracksList setCurrentId={setCurrentId}\r\n                          arrayTracks={props.arrayTracks}\r\n                          findedTracks={props.findedTracks}\r\n                          findTracksThunk={props.findTracksThunk}\r\n                          setFindedTracks={props.setFindedTracks}/>\r\n    )\r\n}\r\n\r\n\r\nexport default Main","import React from \"react\"\r\nimport Main from \"./Main\";\r\nimport {connect} from \"react-redux\";\r\nimport {findTracksThunk, setTracksThunk, setArtistInfoThunk, setFindedTracks} from \"./TracksReducer\";\r\n\r\nlet stateGo = (state) => {\r\n    return {\r\n        arrayTracks: state.trackTree.tracks, //tracks\r\n        arrayArtistInfo: state.trackTree.artistInfo, // artist details\r\n        findedTracks:state.trackTree.findedTracks, // finded tracks (search)\r\n    }\r\n};\r\n\r\nconst MainContainer = connect(stateGo, {setTracksThunk,setArtistInfoThunk,findTracksThunk,setFindedTracks})(Main);\r\n\r\n\r\nexport default MainContainer","import logo from './logo.svg';\nimport './App.css';\nimport MainContainer from \"./Components/MainContainer\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div >\n      <MainContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport TracksReducer from \"./Components/TracksReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers({\r\n    trackTree: TracksReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport store from \"./redux_store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}